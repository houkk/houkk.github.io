(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{376:function(e,r,t){"use strict";t.r(r);var s=t(18),a=Object(s.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("Helm 是 Kubernetes 的一个包管理工具，用来简化 Kubernetes 应用的部署和管理。可以把 Helm 比作 CentOS 的 yum 工具， 而我们的服务可以看作是 rpm 包。")])]),e._v(" "),t("h2",{attrs:{id:"_1-基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本概念"}},[e._v("#")]),e._v(" 1. 基本概念")]),e._v(" "),t("p",[e._v("1）Chart: 是 Helm 管理的安装包，里面包含需要部署的安装包资源"),t("br"),e._v("\n2）Release：是 chart 的部署实例，一个 chart 在一个 Kubernetes 集群上可以有多个 release，即这个 chart 可以被安装多次"),t("br"),e._v("\n3）Repository：chart 的仓库，用于发布和存储 chart"),t("br")]),e._v(" "),t("h2",{attrs:{id:"_2-组成"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-组成"}},[e._v("#")]),e._v(" 2. 组成")]),e._v(" "),t("p",[e._v("Helm 是 C/S 架构， 有 client 和 server 构成。"),t("br"),e._v(" "),t("code",[e._v("tiller")]),e._v("(server): 运行在 Kubernetes 集群上;"),t("br"),e._v(" "),t("code",[e._v("helm")]),e._v("(client,命令行工具)：可在本地运行，一般运行在CI/CD Server上")]),e._v(" "),t("h2",{attrs:{id:"_3-安装-和-初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-安装-和-初始化"}},[e._v("#")]),e._v(" 3. 安装 和 初始化")]),e._v(" "),t("p",[e._v("安装教程， 以及初始化教程， 可以参考 "),t("a",{attrs:{href:"https://github.com/kubernetes/helm/blob/master/docs/install.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("helm github install.md"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"_4-role-based-access-control-基于角色的访问控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-role-based-access-control-基于角色的访问控制"}},[e._v("#")]),e._v(" 4. role-based access control(基于角色的访问控制)")]),e._v(" "),t("p",[e._v("在 Kubernetes 1.8，Kubernetes APIServer 正式开启了RBAC访问控制，所以我们需要创建 tiller 使用的service account: tiller 并分配合适的角色给它。本文不多做说明， 关于如何配置请参考"),t("a",{attrs:{href:"https://docs.helm.sh/using_helm/#role-based-access-control",target:"_blank",rel:"noopener noreferrer"}},[e._v("tiller and RBAC"),t("OutboundLink")],1),e._v("。至于 RBAC， 可以参考 "),t("a",{attrs:{href:"https://coreos.com/blog/hands-on-with-rbac-in-kubernetes-1.8",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hands on with RBAC in Kubernetes 1.8"),t("OutboundLink")],1)]),e._v(" "),t("h2",{attrs:{id:"_5-基本使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-基本使用"}},[e._v("#")]),e._v(" 5. 基本使用")]),e._v(" "),t("h3",{attrs:{id:"_5-1-创建-chart"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-创建-chart"}},[e._v("#")]),e._v(" 5.1 创建 chart")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ helm tree hello-world \nhello-world\n├── charts\n├── Chart.yaml\n├── templates\n│   ├── deployment.yaml\n│   ├── _helpers.tpl\n│   ├── ingress.yaml\n│   ├── NOTES.txt\n│   └── service.yaml\n└── values.yaml\n\n2 directories, 7 files\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br")])]),t("ol",[t("li",[e._v("charts: 本chart依赖的chart，当前是空的;")]),e._v(" "),t("li",[e._v("Chart.yaml: 基本信息\n"),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("apiVersion: v1\ndescription: A Helm chart for Kubernetes\nname: microservice\nversion: 0.1.0\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])])]),e._v(" "),t("li",[e._v("templates: 资源定义文件（serverce， deployment ..etc）")]),e._v(" "),t("li",[e._v("values.yaml: chart 配置默认值， 在 templates 文件中调用")])]),e._v(" "),t("h3",{attrs:{id:"_5-2-安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-安装"}},[e._v("#")]),e._v(" 5.2 安装")]),e._v(" "),t("p",[e._v("直接在上文创建出来的 "),t("code",[e._v("hello-world")]),e._v(" chat 目录下， 执行"),t("br"),e._v(" "),t("code",[e._v("helm install ./")]),e._v("\n查看 release："),t("br"),e._v(" "),t("code",[e._v("helm list")]),e._v("\n删除 release： "),t("br"),e._v(" "),t("code",[e._v("helm delete release-name")])]),e._v(" "),t("h3",{attrs:{id:"_5-3-打包分发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-打包分发"}},[e._v("#")]),e._v(" 5.3 打包分发")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ helm package ./\nSuccessfully packaged chart and saved it to: /home/work/kube/helm/hello-world/hello-world-0.1.0.tgz\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("p",[e._v("同样可以根据此 tgz 包来进行安装、回滚、升级")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("$ helm install hello-world-0.1.0.tgz\n$ helm rollback releasename 1 # releasename 由 helm list 获得， 回滚前一个版本\n$ helm upgrade releasename .  # 更新过 chart 并且 package 后， upgrade 替代 install 命令， 进行更新 \n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br")])]),t("p",[e._v("参考："),t("br"),e._v(" "),t("a",{attrs:{href:"https://www.kubernetes.org.cn/3435.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("是时候使用Helm了：Helm, Kubernetes的包管理工具"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://docs.helm.sh/using_helm/#role-based-access-control",target:"_blank",rel:"noopener noreferrer"}},[e._v("TILLER AND ROLE-BASED ACCESS CONTROL"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://github.com/kubernetes/helm/tree/master/docs",target:"_blank",rel:"noopener noreferrer"}},[e._v("helm github docs"),t("OutboundLink")],1),t("br"),e._v(" "),t("a",{attrs:{href:"https://daemonza.github.io/2017/02/20/using-helm-to-deploy-to-kubernetes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Using Helm to deploy to Kubernetes"),t("OutboundLink")],1),t("br")])])}),[],!1,null,null,null);r.default=a.exports}}]);